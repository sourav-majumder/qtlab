#import time
import zhinst.ziPython as zi
# Log sequence recorded on 2020/12/12 16:33:48
discovery = zi.ziDiscovery()
device_id = discovery.findAll()[0]
device_props = discovery.get(device_id)
daq = zi.ziDAQServer(device_props['serveraddress'], device_props['serverport'], device_props['apilevel'])

# Starting module scopeModule on 2020/12/12 16:33:48
scope = daq.scopeModule()
scope.set('lastreplace', 1)
scope.set('averager/weight', 1)
scope.set('averager/restart', 0)
scope.set('averager/weight', 1)
scope.set('averager/restart', 0)
scope.set('fft/power', 0)
scope.set('mode', 1)
scope.set('fft/spectraldensity', 0)
scope.set('fft/window', 1)
scope.set('save/directory', 'C:\\Users\\Measure\\Documents\\Zurich Instruments\\LabOne\\WebServer')
# Starting module sweep on 2020/12/12 16:34:23
sweeper = daq.sweep()
sweeper.set('xmapping', 1)
sweeper.set('device', 'dev2232')
sweeper.set('historylength', 100)
sweeper.set('settling/inaccuracy', 0.0001)
sweeper.set('averaging/sample', 1)
sweeper.set('bandwidth', 1000)
sweeper.set('maxbandwidth', 1250000)
sweeper.set('omegasuppression', 40)
sweeper.set('order', 4)
sweeper.set('gridnode', '/dev2232/oscs/0/freq')
sweeper.set('save/directory', 'C:\\Users\\Measure\\Documents\\Zurich Instruments\\LabOne\\WebServer')
sweeper.set('averaging/tc', 0)
sweeper.set('averaging/time', 0)
sweeper.set('bandwidth', 1000)
sweeper.set('start', 1000)
sweeper.set('stop', 1000000)
sweeper.set('omegasuppression', 40)
sweeper.set('order', 4)
sweeper.set('settling/inaccuracy', 0.0001)
sweeper.set('filtermode', 1)
sweeper.set('filtermode', 0)
sweeper.set('filtermode', 1)
sweeper.set('bandwidthcontrol', 0)
sweeper.set('bandwidthcontrol', 1)
sweeper.set('bandwidth', 60)
sweeper.set('order', 3)
sweeper.set('settling/time', 0.025)
sweeper.set('start', 13031000)
sweeper.set('stop', 13041000)
sweeper.set('samplecount', 501)
sweeper.set('gridnode', '/dev2232/sigouts/0/amplitudes/3')
sweeper.set('xmapping', 0)
sweeper.set('start', 0)
sweeper.set('stop', 2)
sweeper.set('scan', 2)
sweeper.set('gridnode', '/dev2232/oscs/0/freq')
sweeper.set('xmapping', 1)
sweeper.set('start', 1000)
sweeper.set('stop', 1000000)
sweeper.set('start', 13031000)
sweeper.set('stop', 13041000)
sweeper.set('endless', 0)
sweeper.set('device', 'dev2232')
sweeper.subscribe('/dev2232/demods/0/sample')
sweeper.execute()
# result = 0
# while not sweeper.finished():
#     time.sleep(1)
#     result = sweeper.read()
#     print(f"Progress {sweeper.progress() * 100:.2f} %\r")
# Using intermediate reads you can plot an ongoing function.
sweeper.finish()
sweeper.unsubscribe('*')